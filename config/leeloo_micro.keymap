/*
 * Copyright (c) 2022 The ZMK Contributors
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
// #include <dt-bindings/zmk/rgb.h>

// Layers
#define QW_M    0       // Main
#define QW_L    1       // Lower
#define QW_R    2       // Raise
#define QW_A    3       // Adjust

#define QX_M    4       // Main
#define QX_L    5       // Lower
#define QX_R    6       // Raise
#define QX_A    7       // Adjust

#define QC_N    8       // Number Pad
#define QC_F    9       // Firmware


// Short versions
#define WIN_SC      LG(LS(S))
#define OSX_SC      LG(LS(4))

#define enDSH_X     LA(MINUS)
#define emDSH_X     LS(LA(MINUS))

#define BT0         BT_SEL 0
#define BT1         BT_SEL 1
#define BT2         BT_SEL 2
#define BT3         BT_SEL 3
#define BT4         BT_SEL 4

#define BOOTLDR     &bootloader

#define VOLUP   C_VOL_UP
#define VOLDN   C_VOL_DN
#define VOLMT   C_MUTE

// #define RGBON   &rgb_ug RGB_ON
// #define RGBOFF  &rgb_ug RGB_OFF
// #define RGBTOG  &rgb_ug RGB_TOG
// #define RGBHUI  &rgb_ug RGB_HUI
// #define RGBHUD  &rgb_ug RGB_HUD
// #define RGBSAI  &rgb_ug RGB_SAI
// #define RGBSAD  &rgb_ug RGB_SAD
// #define RGBBRI  &rgb_ug RGB_BRI
// #define RGBBRD  &rgb_ug RGB_BRD
// #define RGBEFF  &rgb_ug RGB_EFF


/*
 * Assign the cs-gpios pin to 4.
 * Uncomment these next three lines if implementing nice!view Displays.
 */
&nice_view_spi {
    cs-gpios = <&pro_micro 4 GPIO_ACTIVE_HIGH>;
};

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";
        adjust_win_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };

        adjust_osx_layer {
            if-layers = <5 6>;
            then-layer = <7>;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_win_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            layers = <QW_M>;
            bindings = <&kp ESC>;
        };

        combo_osx_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            layers = <QX_M>;
            bindings = <&kp ESC>;
        };
    };

    macros {
        enDSH_W: en_Dash {
            label = "enDSH_W";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <20>;
            tap-ms = <20>;
            bindings
                = <&macro_press   &kp LALT>
                , <&macro_tap     &kp KP_N0 &kp KP_N1 &kp KP_N5 &kp KP_N0>
                , <&macro_release &kp LALT>
                ;
        };

        emDSH_W: em_Dash {
            label = "emDSH_W";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <20>;
            tap-ms = <20>;
            bindings
                = <&macro_press   &kp LALT>
                , <&macro_tap     &kp KP_N0 &kp KP_N1 &kp KP_N5 &kp KP_N1>
                , <&macro_release &kp LALT>
                ;
        };
    };

    behaviors {
        tdw_Q: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "WIN_QUIT";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp Q>, <&kp LA(F4)>;
        };

        tdx_Q: tap_dance_1 {
            compatible = "zmk,behavior-tap-dance";
            label = "OSX_QUIT";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp Q>, <&kp LG(Q)>;
        };

        tdw_LRP: tap_dance_2 {
            compatible = "zmk,behavior-tap-dance";
            label = "WIN_LRPAR";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LPAR>, <&kp RPAR>;
        };

        tdx_LRB: tap_dance_3 {
            compatible = "zmk,behavior-tap-dance";
            label = "WIN_LRBKT";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LBKT>, <&kp RBKT>;
        };

        tdx_LRR: tap_dance_4 {
            compatible = "zmk,behavior-tap-dance";
            label = "WIN_LRBRC";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LBRC>, <&kp RBRC>;
        };

        tdx_LRA: tap_dance_5 {
            compatible = "zmk,behavior-tap-dance";
            label = "WIN_LRANG";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LT>, <&kp GT>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_win_layer {
            label = " Win 11";
            bindings = <
&tdw_Q     &kp W      &kp E      &kp R      &kp T                            &kp Y      &kp U      &kp I      &kp O      &kp P
&kp A      &kp S      &kp D      &kp F      &kp G                            &kp H      &kp J      &kp K      &kp L      &kp SEMI
&mt LSFT Z &kp X      &kp C      &kp V      &kp B     &mo QC_N    &kp RGUI   &kp N      &kp M      &kp COMMA  &kp DOT    &mt RSFT FSLH
                  &kp LALT   &kp LCTRL  &lt 1 RET  &lt 2 MINUS    &lt 2 EQUAL  &lt 1 SPACE  &kp BSPC   &mo QC_F
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        lower_win_layer {
            label = " Lower";
            bindings = <
&kp N1     &kp N2     &kp N3     &kp N4     &kp N5                           &kp N6     &kp N7     &kp N8     &kp N9     &kp N0
&tdx_LRA   &tdw_LRP   &tdx_LRB   &tdx_LRR   &trans                           &trans     &trans     &trans     &trans     &kp QUOT
&kp LSHFT  &trans     &trans     &trans     &trans     &trans     &trans     &enDSH_W   &emDSH_W   &trans     &trans     &kp RSHFT
                      &trans     &trans     &trans     &trans     &trans     &trans     &trans     &trans
            >;

            sensor-bindings = <&inc_dec_kp UP DOWN>;
        };

        raise_win_layer {
            label = " Raise";
            bindings = <
&kp TAB    &trans     &trans     &kp WIN_SC &trans                           &kp PG_UP  &kp HOME   &kp UP     &kp END    &kp BSLH
&kp CAPS   &trans     &trans     &trans     &trans                           &kp PG_DN  &kp LEFT   &kp DOWN   &kp RIGHT  &kp GRAVE
&trans     &trans     &trans     &trans     &trans     &trans     &trans     &trans     &trans     &trans     &trans     &mt RSFT TILDE
                      &trans     &trans     &trans     &trans     &trans     &trans     &kp DEL    &trans
            >;

            sensor-bindings = <&inc_dec_kp LEFT RIGHT>;
        };

        adjust_win_layer {
            label = " Adjust";
            bindings = <

&kp F1     &kp F2     &kp F3     &kp F4     &kp F5                           &trans     &trans     &kp VOLUP  &trans     &trans
&kp F6     &kp F7     &kp F8     &kp F9     &kp F10                          &trans     &trans     &kp VOLDN  &trans     &trans
&kp F11    &kp F12    &trans     &trans     &trans     &trans     &trans     &trans     &kp VOLMT  &trans     &trans     &trans
                      &trans     &trans     &trans     &trans     &trans     &trans     &trans     &tog QX_M
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PG_DN>;
        };

        default_osx_layer {
            label = " OSX";
            bindings = <
&tdx_Q     &kp W      &kp E      &kp R      &kp T                            &kp Y      &kp U      &kp I      &kp O      &kp P
&kp A      &kp S      &kp D      &kp F      &kp G                            &kp H      &kp J      &kp K      &kp L      &kp SEMI
&mt LSFT Z &kp X      &kp C      &kp V      &kp B     &mo QC_N    &kp LCTRL  &kp N      &kp M      &kp COMMA  &kp DOT    &mt RSFT FSLH
                  &kp LALT   &kp LGUI   &lt 5 RET  &lt 6 MINUS    &lt 6 EQUAL  &lt 5 SPACE  &kp BSPC   &mo QC_F
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        lower_osx_layer {
            label = " Lower";
            bindings = <
&kp N1     &kp N2     &kp N3     &kp N4     &kp N5                           &kp N6      &kp N7      &kp N8     &kp N9     &kp N0
&tdx_LRA   &tdw_LRP   &tdx_LRB   &tdx_LRR   &none                            &none       &none       &none      &none      &kp QUOT
&kp LSHFT  &none      &none      &none      &none      &trans     &trans     &kp enDSH_X &kp emDSH_X &none      &none      &kp RSHFT
                      &trans     &trans     &trans     &trans     &trans     &trans      &trans      &trans
            >;

            sensor-bindings = <&inc_dec_kp UP DOWN>;
        };

        raise_osx_layer {
            label = " Raise";
            bindings = <
&kp TAB    &none      &none      &kp OSX_SC &none                            &kp PG_UP  &kp HOME   &kp UP     &kp END    &kp BSLH
&kp CAPS   &none      &none      &none      &none                            &kp PG_DN  &kp LEFT   &kp DOWN   &kp RIGHT  &kp GRAVE
&trans     &none      &none      &none      &none      &trans     &trans     &none      &none      &none      &none      &mt RSFT TILDE
                      &trans     &trans     &trans     &trans     &trans     &trans     &kp DEL    &trans
            >;

            sensor-bindings = <&inc_dec_kp LEFT RIGHT>;
        };

        adjust_osx_layer {
            label = " Adjust";
            bindings = <

&kp F1     &kp F2     &kp F3     &kp F4     &kp F5                           &none      &none      &kp VOLUP  &none      &none
&kp F6     &kp F7     &kp F8     &kp F9     &kp F10                          &none      &none      &kp VOLDN  &none      &none
&kp F11    &kp F12    &none      &none      &none      &trans     &trans     &none      &kp VOLMT  &none      &none      &trans
                      &trans     &trans     &trans     &trans     &trans     &trans     &trans     &tog QX_M
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PG_DN>;
        };

        numpad_layer {
            label = " NumPad";
            bindings = <

&none     &none      &none      &none      &none                            &kp SLASH  &kp N7     &kp N8     &kp N9     &kp MINUS
&none     &none      &none      &none      &none                            &kp ASTRK  &kp N4     &kp N5     &kp N6     &kp PLUS
&none     &none      &none      &none      &none      &trans     &trans     &none      &kp N1     &kp N2     &kp N3     &kp EQUAL
// RGBON      RGBTOG     RGBHUI     RGBSAI     RGBBRI                           &kp ASTRK  &kp N4     &kp N5     &kp N6     &kp PLUS
// RGBOFF     RGBEFF     RGBHUD     RGBSAD     RGBBRD     &trans     &trans     &none      &kp N1     &kp N2     &kp N3     &kp EQUAL
                      &trans     &trans     &trans     &trans     &trans     &kp N0     &kp DOT    &none
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        ble_layer {
            label = " BLE";
            bindings = <

&bt BT0    &bt BT1    &bt BT2    &bt BT3    &bt BT4                          &bt BT0    &bt BT1    &bt BT2    &bt BT3    &bt BT4
BOOTLDR    &reset     &none      &none      &none                            &none      &none      &none      &reset     BOOTLDR
&trans     &none      &none      &none      &none      &trans     &trans     &none      &none      &none      &none      &trans
                      &trans     &bt BT_CLR &trans     &trans     &trans     &trans     &bt BT_CLR &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

    };
};
